{# Données d'entrée
- contacts (Array of Contact) Tableau des contacts à afficher
#}


<div class="well m-15">
    <form id="addContact-form" action="{{ path('addContact') }}" method="post">
        <div class="row">
            <div class="col-sm-10">
                <div class="form-group">
                    <label for="email-contacts" class="sr-only">{{ "contacts.add_form.label"|trans }} :</label> <select id="email-contacts" name="email-contacts[]" multiple="multiple"
                                                                                                                        class="form-control"></select>
                </div>
            </div>
            <div class="col-sm-2 text-center">
                <button type="submit" class="btn btn-success" id="btn-add-contact" data-style="zoom-in" data-loading-text="{{ "global.button.loading"|trans }}"
                        data-original-text="<i class='zmdi zmdi-accounts-add'></i>{{ "contacts.add_form.submit"|trans }}">
                    <i class="zmdi zmdi-accounts-add"></i>{{ "contacts.add_form.submit"|trans }}
                </button>
            </div>
        </div>
    </form>
</div>

<div class="contacts-list">
    {#{% if contacts|length>0 %}#}
    <form id="selectionContacts" method="post" action="#">
        <div class="table-responsive">
            <table id="contactsTable" class="table table-condensed table-hover table-striped table-vmiddle" role="grid">
                <thead>
                <tr>
                    <th data-column-id="avatar" data-formatter="avatar" data-sortable="false" data-align="center" data-visible-in-selection="false">
                        {{ "contacts.table.avatar.column_title"|trans }}
                    </th>
                    <th data-column-id="name" data-formatter="name" data-order="asc">{{ "contacts.table.contact"|trans }}</th>
                    <th data-column-id="email" data-identifier="true">{{ "contacts.table.email"|trans }}</th>
                    <th data-column-id="groups" data-sortable="false">{{ "contacts.table.groups"|trans }}</th>
                    <th data-column-id="commands" data-formatter="commands" data-sortable="false" data-visible-in-selection="false">{{ "contacts.table.commnads"|trans }}</th>
                </tr>
                </thead>
                <tbody class="f-10">
                <noscript>
                    {% for contact in contacts %}
                        {{ include('ATUserBundle:contact/partials:contact_table_row.html.twig', {
                            'contact' : contact
                        }) }}
                    {% endfor %}
                </noscript>
                </tbody>
            </table>
        </div>
        <div class="text-center">
            <p>{{ "contacts.text.selection_action"|trans }} : </p>
            <input type="submit" disabled="disabled" class="btn btn-default" value="{{ "contacts.text.selection_button"|trans }}">
        </div>
    </form>
    {#{% else %}
        <p>{{ "contacts.text.empty_contact_list"|trans }}.</p>
    {% endif %}#}
</div>

<script>
    $(document).ready(function () {
        var $emailsSelectize = $('#email-contacts').selectize({
            persist: false,
            placeholder: "{{ "contacts.add_form.placeholder"|trans }}",
            valueField: 'id',
            labelField: 'name',
            searchField: ['name', 'email'],
            sortField: 'name',
            render: {
                item: renderContactAsItem,
                option: renderContactAsOption,
                option_create: renderOptionCreate
            },
            createFilter: createFilterEmail,
            create: createContact
        });

        var contactsBootgrid = $('#contactsTable').bootgrid({
            multiSort: true,
            selection: true,
            multiSelect: true,
            rowSelect: false,
            keepSelection: true,
            delay: 200,
            characters: 2,
            ajax: true,
            url: "{{ path('getUserContacts') }}",
            formatters: {
                "avatar": function (column, row) {
                    if (row.avatar && row.avatar.trim() != "") {
                        return "<span class=\"zmdi zmdi-account zmdi-hc-2x text-center\"></span>";
                    } else {
                        return "<span class=\"zmdi zmdi-account-circle zmdi-hc-2x text-center\"></span>";
                    }
                },
                "name": function (column, row) {
                    return "<a href=\"#\" class=\"client-link\" title=\"{{ "contacts.table.avatar.title_attr"|trans }}\">" + row.name + "</a>";
                },
                "commands": function (column, row) {
                    return "<button type=\"button\" class=\"btn btn-icon command-edit waves-effect waves-circle\" data-row-id=\"" + row.email + "\"><span class=\"zmdi zmdi-edit\"></span></button>" +
                            "<a href='{{ path('deleteContact') }}' class=\"btn btn-icon command-delete waves-effect waves-circle\" data-row-id=\"" + row.email + "\">" +
                            "<span class=\"zmdi zmdi-delete\"></span></a>";
                }
            },
            labels: {
                'noResults': '{{ "contacts.text.empty_contact_list"|trans }}'
            }
        }).on("loaded.rs.jquery.bootgrid", function () {
            /* Executes after data is loaded and rendered */
            contactsBootgrid.find(".command-edit").on("click", function (e) {
                var email = $(this).data("row-id");
            }).end().find(".command-delete").on("click", function (e) {
                var link = $(this);
                var email = $(this).data("row-id");
                e.preventDefault();
                swal({
                    title: '{{ "contacts.alert.remove_contact_confirmation_title"|trans }}',
                    text: '{{ "contacts.alert.remove_contact_confirmation_text"|trans }}',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: '{{ "global.button.delete"|trans }}',
                    closeOnConfirm: true,
                    showLoaderOnConfirm: true
                }, function (isConfirm) {
                    if (isConfirm) {
                        ajaxRequest(link, {"email-contact": email}, e, function (responseJSON, textStatus, jqXHR) {
                            contactsBootgrid.bootgrid('reload');
                        }, null, null);
                    }
                });
            });
        });

        $('form#addContact-form').on('submit', function (e) {
            ajaxFormSubmission(this, e, function (responseJSON, textStatus, jqXHR) {
                var control = $emailsSelectize[0].selectize;
                control.clear();
                control.clearOptions();
            }, null, function (dataOrJqXHR, textStatus, jqXHROrErrorThrown) {
                contactsBootgrid.bootgrid('reload');
            });
        });
    });
</script>
