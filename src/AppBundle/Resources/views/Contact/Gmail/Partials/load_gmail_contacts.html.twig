{# Données d'entrée :
- none
#}

<div id="loadGmailContacts_Content">
    <div class="text-center">
        <div id="gmail-preloader" class="preloader pl-lg center-block">
            <svg class="pl-circular" viewBox="25 25 50 50">
                <circle class="plc-path" cx="50" cy="50" r="20"></circle>
            </svg>
        </div>
    </div>

    <div id="divauthresult"></div>

    <div class="table-responsive">
        <div id="divtableresult"></div>
    </div>

    <script src="https://apis.google.com/js/client.js?onload=checkAuth" async></script>
    <script>
        var GMAIL_CONTACTS = [];
        var bootGridTable = null;

        var $gmailPreloader = $('#gmail-preloader').hide();

        {# Your Client ID is retrieved from your project in the Developer Console => https://console.developers.google.com#}
        var CLIENT_ID = '{{ google_client_id }}';
        var SCOPES = ["https://www.googleapis.com/auth/contacts.readonly"];

        /**
         * Check if current user has authorized this application.
         */
        function checkAuth() {
            gapi.auth.authorize({'client_id': CLIENT_ID, 'scope': SCOPES.join(' '), 'immediate': true}, null);
        }

        /**
         * Start the process to load the Gmail contacts
         */
        function authClick() {
            if (GMAIL_CONTACTS.length === 0) {
                $gmailPreloader.show();
                gapi.auth.authorize({client_id: CLIENT_ID, scope: SCOPES, immediate: false}, authResult);
            }
            return false;
        }

        /**
         * Handle response from authorization server.
         * @param {Object} _Result Authorization result.
         */
        function authResult(_Result) {
            var $Div = $('#divauthresult');
            if (_Result && !_Result.error) {
                // Auth OK! => load API.
                $Div.hide();
                loadPeopleApi();
            } else {
                // Auth Error, allowing the user to initiate authorization by
                $Div.text('Authtentication Error : ' + _Result.error);
                $gmailPreloader.hide();
            }
        }

        /**
         * Load Google People client library. List Contact requested info
         */
        function loadPeopleApi() {
            gapi.client.load('https://people.googleapis.com/$discovery/rest', 'v1', loadContacts);

        }

        function loadContacts(pageToken) {
            pageToken = typeof pageToken !== 'undefined' ? pageToken : null;
            var options = {
                'resourceName': 'people/me',
                'pageSize': 100,
                'sortOrder': 'FIRST_NAME_ASCENDING',
                'requestMask.includeField': 'person.photos,person.email_addresses,person.names'
            };
            if (pageToken != null) {
                options['pageToken'] = pageToken;
            }
            var request = gapi.client.people.people.connections.list(options);
            request.execute(function (resp) {
                var connections = resp.connections;

                if (typeof connections !== 'undefined' && connections !== null && connections.length > 0) {
                    for (i = 0; i < connections.length; i++) {
                        var person = connections[i];
                        if (person.emailAddresses && person.emailAddresses.length > 0) {
                            var contact = [];
                            if (person.photos && person.photos.length > 0)
                                contact.push(person.photos[0].url);
                            else
                                contact.push(null);

                            if (person.names && person.names.length > 0)
                                contact.push(person.names[0].displayName);
                            else
                                contact.push('');

                            contact.push(person.emailAddresses[0].value);
                            GMAIL_CONTACTS.push(contact);
                        }
                    }
                }
                if (resp.nextPageToken != null) {
                    loadContacts(resp.nextPageToken)
                } else {
                    showContacts();
                }
            });
        }


        /**
         * Show Contacts Details display on a table pagesize = 100 connections.
         */
        function showContacts() {
            var _Html = "<table id='tab-gmail-contact' class='table table-condensed table-hover table-striped'><thead><tr>" +
                "<th data-column-id='avatar' data-formatter='avatar' data-sortable='false' data-align='center'></th>" +
                "<th data-column-id='name' data-searchable='true'>{{ "contactsgmail.results.contact"|trans }}</th>" +
                "<th data-column-id='email' data-identifier='true'>{{ "contactsgmail.results.email"|trans }}</th>" +
                "</tr></thead><tbody>";
            var _EmptyCell = "<td> </td>";

            for (i = 0; i < GMAIL_CONTACTS.length; i++) {
                var person = GMAIL_CONTACTS[i];
                _Html += "<tr>";

                if (person[0] != null)
                    _Html += "<td>" + person[0] + "</td>";
                else
                    _Html += _EmptyCell;

                _Html += "<td>" + person[1] + "</td>";
                _Html += "<td>" + person[2] + "</td>";
                _Html += "</tr>";
            }
            _Html += "</tbody></table>";
            $("#divtableresult").html(_Html);
            bootGridTable = $("#tab-gmail-contact").bootgrid({
                multiSort: true,
                selection: true,
                multiSelect: true,
                rowSelect: false,
                keepSelection: true,
                caseSensitive: false,
                formatters: {
                    "avatar": function (column, row) {
                        if (row.avatar && row.avatar.trim() != "") {
                            return "<div class='avatar-img-container-sm center-block'><img class='yzi-avatar-img' src='" + row.avatar + "'></div>";
                        }
                    }
                },
                labels: {
                    noResults: '{{ "contactsgmail.results.empty_table"|trans }}'
                }
            }).on("selected.rs.jquery.bootgrid", function (e, rows) {
                {% block js_onBootgrid_selection %}{% endblock %}
            }).on("deselected.rs.jquery.bootgrid", function (e, rows) {
                {% block js_onBootgrid_deselection %}{% endblock %}
            });
            $gmailPreloader.hide();
        }
    </script>
</div>