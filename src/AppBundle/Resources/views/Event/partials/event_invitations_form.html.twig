{# Données d'entrée
- userEventInvitation (EventInvitation) L'invitation à afficher (incluant l'événement concerné)
- invitationsForm (Form) le formulaire de sélection d'email pour inviter
#}

<div id="event_invitations_form_container">
    {% block form_start %}
        {{ form_start(invitationsForm, {'action':path('displayEvent',{'token':userEventInvitation.event.token}),'attr':{'id':'eventInvitations'}}) }}
    {% endblock form_start %}

    {{ form_row(invitationsForm.invitations, {
        'id':'eventInvitations_newEmails',
        'label':'invitations.form.invitations.label',
        'attr':{'class':'contacts'},
        'help':'invitations.form.invitations.help'|trans
    }) }}

    {% block action_buttons %}
        <div class="text-center">
            <button type="submit" class="btn btn-primary waves-effect" data-loading-text="{{ "global.button.loading"|trans }}" data-original-text="{{ "invitations.button.send_invitation"|trans }}">
                {{ "invitations.button.send_invitation"|trans }}
            </button>
        </div>
    {% endblock action_buttons %}
    {{ form_end(invitationsForm) }}

    <script>
        $(document).ready(function () {
            $('#eventInvitations_newEmails').selectize({
                persist: false,
                maxItems: null,
                placeholder: "{{ "invitations.form.invitations.placeholder"|trans }}",
                valueField: 'value',
                labelField: 'text',
                searchField: ['text', 'value'],
                hideSelected: true,
                createOnBlur: true,
                render: {
                    item: renderUserAsItem,
                    option: renderUserAsOption,
                    option_create: renderOptionCreate
                },
                createFilter: createFilterEmail,
                create: createUser
                {% if is_granted("IS_AUTHENTICATED_REMEMBERED") %}
                , preload: 'focus',
                load: function (query, callback) {
                    $.ajax({
                        url: '{{ path('searchContacts') }}',
                        data: {'search': query},
                        type: 'POST',
                        error: function () {
                            callback();
                        },
                        success: function (res) {
                            callback(res.slice(0, 15));
                        }
                    });
                }
                {% endif %}
            });

            {% block js_document_ready %}
            $('form#eventInvitations').on('submit', function (e) {
                if (!eventInvitationValid && askGuestName !== undefined) {
                    e.preventDefault();
                    askGuestName();
                } else {
                    ajaxFormSubmission(this, e, null, function (jqXHR, textStatus, errorThrown) {
                        if (jqXHR.hasOwnProperty('responseJSON')) {
                            var responseJSON = jqXHR['responseJSON'];
                            if (responseJSON.hasOwnProperty('data') && responseJSON['data'].hasOwnProperty('eventInvitationValid') && !responseJSON['data']['eventInvitationValid']) {
                                if (!eventInvitationValid && askGuestName !== undefined) {
                                    askGuestName();
                                }
                            }
                        }
                    }, null);
                }
            });
            {% endblock js_document_ready %}
        });
    </script>
</div>