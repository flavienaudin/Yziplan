<div id="eventInvitations-main-div">
    <h2>{{ "invitations.display.title"|trans }}
        <small class="d-block">Todo : design + user avatar</small>
    </h2>

    <div>
        <div class="well-sm z-depth-2 palette-Grey-200 bg m-b-20">
            <ul class="list-inline" id="eventInvitations">
                {% for eventInvitation in eventInvitations if eventInvitation.status is not constant('AppBundle\\Entity\\enum\\EventInvitationStatus::AWAITING_VALIDATION') %}
                    {{ include('@App/Event/partials/eventInvitation_li.html.twig', {'event': event, 'eventInvitation':eventInvitation, 'editEventMode':editEventMode}) }}
                {% endfor %}
            </ul>
        </div>
        {% if invitationsForm is not null %}
            {{ form_start(invitationsForm, {
                'action':path('displayEvent',{'token':event.token,'tokenEdition':event.tokenEdition}),
                'attr':{'id':'eventInvitations'}}) }}
            {{ form_row(invitationsForm.invitations, {
                'id':'eventInvitations_newEmails',
                'attr':{'class':'contacts'},
                'label':'invitations.form.invitations.label'}) }}
            <div class="text-center">
                <button type="submit" class="btn btn-primary waves-effect" data-loading-text="{{ "global.button.loading"|trans }}"
                        data-original-text="{{ "invitations.button.send_invitation"|trans }}">
                    {{ "invitations.button.send_invitation"|trans }}
                </button>
            </div>
            {{ form_end(invitationsForm) }}
        {% endif %}
    </div>
    <script>
        {% if invitationsForm is not null %}
        $('#eventInvitations_newEmails').selectize({
            persist: false,
            maxItems: null,
            placeholder: "{{ "invitations.form.invitations.placeholder"|trans }}",
            valueField: 'value',
            labelField: 'text',
            searchField: ['text', 'value'],
            hideSelected: true,
            render: {
                item: renderUserAsItem,
                option: renderUserAsOption,
                option_create: renderOptionCreateUser
            },
            createFilter: createFilterUser,
            create: createUser
        });

        $('form#eventInvitations').on('submit', function (e) {
            ajaxFormSubmission(this, e, function (responseJSON, textStatus, jqXHR) {
                if (responseJSON.htmlContent) {
                    $('#eventInvitations-main-div').replaceWith(responseJSON.htmlContent);
                }
            }, null, null);
        });
        {% endif %}

        {% if editEventMode %}
        $('#eventInvitations').find('li > a').each(function () {
            var link = $(this);
            $(this).on('click', function (e) {
                ajaxRequest($(this), e, function (responseJSON, textStatus, jqXHR) {
                    $(link).parent().remove();
                }, null, null);
            });
        });
        {% endif %}
    </script>
</div>