{# Données d'entrée :
- userEventInvitation (EventInvitation) Invitation de l'utilisateur en cours
- userEventInvitationForm (Form) Formulaire du profil de l'invité pour l'invitation
#}

<div id="eventInvitationProfile_formContainer">
    {% block form_start %}
        {{ form_start(userEventInvitationForm, {'action': path('displayEvent',{'token':userEventInvitation.event.token}), 'attr':{'id':userEventInvitationForm.vars.id}}) }}
    {% endblock form_start %}

    {% if not is_granted("IS_AUTHENTICATED_REMEMBERED") %}
        <div class="row">
            <div class="col-xs-12 text-center m-b-10">
                <a data-toggle="modal" href="#modalLogin" class="btn btn-link btn-icon-text c-blue" role="button"><i class="zmdi zmdi-sign-in"></i> {{ 'layout.login'|trans({}, 'FOSUserBundle') }}</a>
            </div>
        </div>
    {% endif %}

    <div class="row">
        <div class="col-xs-7">
            {{ form_row(userEventInvitationForm.guestName, {
                'label':'eventInvitation.form.guestname.label'|trans,
                'label_attr':{'class':'sr-only'},
                'attr':{'class':'input-sm', 'placeholder':'eventInvitation.form.guestname.placeholder'},
                'widget_options':{'fgline' : true}
            }) }}
            {{ form_row(userEventInvitationForm.email, {
                'label':'eventInvitation.form.email.label',
                'label_attr':{'class':'sr-only'},
                'attr':{'class':'input-sm', 'placeholder':'eventInvitation.form.email.placeholder'},
                'widget_options':{'fgline' : true}
            }) }}
        </div>
        <div class="col-xs-5">
            <div class="avatar-img-container-md center-block">
                {{ include("@App/Avatar/partials/avatar_display.html.twig",{"invitation" : userEventInvitation, "userEventInvitation": userEventInvitation}) }}
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12">
            {% if not is_granted("IS_AUTHENTICATED_REMEMBERED") or (wizard_context is defined and wizard_context) %}
                <div class="form-group">
                    <a href="#invitation_personnal_link_container" data-toggle="collapse" aria-controls="#invitation_personnal_link_container" aria-expanded="false"> <label class="control-label"
                                                                                                                                                                             for="invitation_personnal_link">
                            {{ (userEventInvitation.organizer?"eventInvitation.form.administration_link.label"|trans|raw:"eventInvitation.form.personal_link.label"|trans|raw) }}</label></a>
                    <div class="collapse animated" id="invitation_personnal_link_container">
                        <div class="input-group input-group-sm">
                            <div class="fg-line">
                                <input type="text" id="invitation_personnal_link" class="form-control input-sm" readonly="readonly"
                                       value="{{ url("displayEventInvitation",{'token':userEventInvitation.token}) }}">
                            </div>
                            <span class="input-group-btn">
                                <button type="button" id="btn_invitation_personnal_link" class="btn btn-primary btn-icon-text" data-clipboard-target="#invitation_personnal_link"><i
                                            class="zmdi zmdi-copy"></i>{{ "global.button.copy"|trans }}</button></span>
                        </div>
                    </div>
                </div>
            {% endif %}

            {% block action_buttons %}
                <div class="text-center">
                    {% if not is_granted("IS_AUTHENTICATED_REMEMBERED") and userEventInvitation.displayableName(false) is not empty %}
                        <i class="m-r-10"><a href="{{ path('disconnectEventInvitation', {'eventToken':userEventInvitation.event.token}) }}">
                                {{ "eventInvitation.profile.card.text.disconnect"|trans({'%user%': userEventInvitation.displayableName(false)}) }}</a></i>
                    {% endif %}
                    {% if userEventInvitationForm is defined %}
                        <button type="submit" class="btn {{ userEventInvitation.displayableName(false) is empty?"btn-primary":"btn-link b-1" }}">{{ "global.button.save"|trans }}</button>
                    {% endif %}
                </div>
            {% endblock action_buttons %}
        </div>
    </div>

    {{ form_rest(userEventInvitationForm) }}
    {{ form_end(userEventInvitationForm) }}

    {% block js_script %}
        {% use "@App/Event/partials/block/invitationUrl_copyClipboardInput.html.twig" %}
        {% set htmlInputBlock = block('inviationUrl_copyClipboardInput_block') %}
        <script>
            $(document).ready(function () {
                new Clipboard("#btn_invitation_personnal_link");
                new Clipboard('#btn_copy_invitation_url');
                $('form#{{ userEventInvitationForm.vars.id }}').on("submit", preSubmitEventInvitationProfileForm);

                {% if userEventInvitation.displayableName(false) is empty %}
                $('#invitation_personnal_link_container').collapse('show');
                {% endif %}

                {% block js_document_ready %}{% endblock js_document_ready %}
            });

            /** L'utilisateur soumet le formulaire "Profil" de lui-même (non via une autre action dans la page) */
            function preSubmitEventInvitationProfileForm(e) {
                if (e !== null) {
                    e.preventDefault();
                }
                var profileEmail = $('#{{ userEventInvitationForm.email.vars.id }}').val();
                var $form = $(this);
                if (profileEmail.trim() === "") {
                    // On indique le lien de l'invitation de l'utilisateur et on lui demande son email pour lui envoyer
                    // Il peut refuser, dans les 2 cas (confirm/dismiss==cancel), le formulaire est envoyé
                    swal({
                        titleText: "{{ "eventInvitation.profile.card.guestemail_empty_alert.title"|trans }}",
                        html: '{{ htmlInputBlock|raw }}<br>{{ "eventInvitation.profile.card.guestemail_empty_alert.html"|trans }}',
                        input: "email",
                        allowOutsideClick: false,
                        allowEscapeKey: false,
                        showCancelButton: true,
                        buttonsStyling: false,
                        cancelButtonText: "{{ "eventInvitation.profile.card.guestemail_empty_alert.button.cancel"|trans }}",
                        cancelButtonClass: "btn btn-default btn-link c-blue m-b-10 m-l-5 m-r-5",
                        confirmButtonText: "{{ "eventInvitation.profile.card.guestemail_empty_alert.button.confirm"|trans }}",
                        confirmButtonClass: "btn btn-primary m-b-10  m-l-5 m-r-5",
                        animation: "slide-from-top",
                        inputPlaceholder: "{{ "eventInvitation.form.email.placeholder"|trans|raw }}"
                    }).then(function (inputValue) {
                        $('#{{ userEventInvitationForm.email.vars.id }}').val(inputValue);
                        submitEventInvitationProfileForm($form, e);
                    }, function (dismiss) {
                        if (dismiss === 'cancel') {
                            // L'utilisateur a cliqué sur le bouton "J'ai bien noté le lien" => pas d'email volontairement
                            submitEventInvitationProfileForm($form, e);
                        }
                    });
                } else {
                    submitEventInvitationProfileForm($form, e);
                }
            }

            /** Submit the profile form with ajax request */
            function submitEventInvitationProfileForm($form, e, thenConfirmCallback, thenConfirmCallbackParams, thenCancelCallback, thenCancelCallbackParams) {
                ajaxFormSubmission($form, e, function (responseJSON, textStatus, jqXHR) {
                    if (responseJSON.hasOwnProperty('data') && responseJSON['data'].hasOwnProperty('userDisplayableName')) {
                        LetterAvatar.setConnectedUserName(responseJSON['data']['userDisplayableName']);
                    }
                    if (typeof thenConfirmCallback === 'function') {
                        if (thenConfirmCallbackParams === undefined) {
                            thenConfirmCallbackParams = null;
                        }
                        thenConfirmCallback(thenConfirmCallbackParams);
                    }

                    {% block submitEventInvitationProfileForm_succes %}{% endblock submitEventInvitationProfileForm_succes %}
                }, function (jqXHR, textStatus, errorThrown) {
                    if (typeof thenCancelCallback === 'function') {
                        if (thenCancelCallbackParams === undefined) {
                            thenCancelCallbackParams = null;
                        }
                        thenCancelCallback(thenCancelCallbackParams)
                    }
                }, function () {
                    LetterAvatar.transform();
                });
            }

            {% if userEventInvitation.status is constant('AppBundle\\Utils\\enum\\EventInvitationStatus::AWAITING_VALIDATION') or userEventInvitation.status is constant('AppBundle\\Utils\\enum\\EventInvitationStatus::AWAITING_ANSWER') %}
            eventInvitationValid = false;
            /**
             * Affichage d'une fenêtre "dialog" pour demander le nom de l'invité et d'executer la fonction donnée (ex : soumission d'un formulaire)
             */
            function askGuestName(e, thenConfirmCallback, thenConfirmCallbackParams, thenCancelCallback, thenCancelCallbackParams) {
                if (!eventInvitationValid) {
                    if (typeof e !== 'undefined' && e !== null) {
                        e.preventDefault();
                    }
                    var currentStep = 1;
                    var form = $('form#{{ userEventInvitationForm.vars.id }}');
                    var steps = [
                        {
                            titleText: "{{ "eventInvitation.profile.card.guestname_required_alert.title"|trans }}",
                            input: "text",
                            type: 'question',
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            showCancelButton: true,
                            cancelButtonText: "{{ "global.button.cancel"|trans }}",
                            animation: "slide-from-top",
                            inputPlaceholder: "{{ "eventInvitation.form.guestname.placeholder"|trans|raw }}",
                            inputValidator: function (input) {
                                return new Promise(function (resolve, reject) {
                                    if (input === false || input.trim() === '') {
                                        reject("{{ "eventInvitation.profile.card.guestname_required_alert.inputError"|trans }}");
                                    } else {
                                        currentStep = 2;
                                        $('#{{ userEventInvitationForm.guestName.vars.id }}').val(input);
                                        resolve();
                                    }
                                })
                            }
                        }
                    ];

                    var profileEmail = $('#{{ userEventInvitationForm.email.vars.id }}').val();
                    if (profileEmail.trim() === "") {
                        steps.push({
                            titleText: "{{ "eventInvitation.profile.card.guestemail_empty_alert.title"|trans }}",
                            html: '{{ htmlInputBlock|raw }}<br>{{ "eventInvitation.profile.card.guestemail_empty_alert.html"|trans }}',
                            type: 'question',
                            input: "email",
                            allowOutsideClick: false,
                            allowEscapeKey: false,
                            buttonsStyling: false,
                            showCancelButton: true,
                            cancelButtonText: "{{ "eventInvitation.profile.card.guestemail_empty_alert.button.cancel"|trans }}",
                            cancelButtonClass: "btn btn-default btn-link c-blue m-b-10 m-l-5 m-r-5",
                            confirmButtonText: "{{ "eventInvitation.profile.card.guestemail_empty_alert.button.confirm"|trans }}",
                            confirmButtonClass: "btn btn-primary m-b-10  m-l-5 m-r-5",
                            animation: "slide-from-top",
                            inputPlaceholder: "{{ "eventInvitation.form.email.placeholder"|trans|raw }}"
                        });
                    }

                    swal.queue(steps).then(function (result) {
                        $('#{{ userEventInvitationForm.guestName.vars.id }}').val(result[0]);
                        if (result.length > 1) {
                            $('#{{ userEventInvitationForm.email.vars.id }}').val(result[1]);
                        }
                        submitEventInvitationProfileForm(form, e, thenConfirmCallback, thenConfirmCallbackParams);
                    }, function (dismiss) {
                        if (currentStep === 1) {
                            swal({
                                title: "{{ "global.swal.title.warning"|trans }}",
                                html: "{{ "eventInvitation.profile.card.guestname_required_alert.dismiss"|trans }}",
                                type: "warning"
                            });
                            if (typeof thenCancelCallback === 'function') {
                                if (thenCancelCallbackParams === undefined) {
                                    thenCancelCallbackParams = null;
                                }
                                thenCancelCallback(thenCancelCallbackParams)
                            }
                        } else if (currentStep === 2) {
                            if (dismiss === 'cancel') {
                                // L'utilsiateur a cliqué sur le bouton "J'ai bien noté le lien" => pas d'email volontairement
                                submitEventInvitationProfileForm(form, e, thenConfirmCallback, thenConfirmCallbackParams, thenCancelCallback, thenConfirmCallbackParams);
                            }
                        } else {
                            if (typeof thenCancelCallback === 'function') {
                                if (thenCancelCallbackParams === undefined) {
                                    thenCancelCallbackParams = null;
                                }
                                thenCancelCallback(thenCancelCallbackParams)
                            }
                        }
                    });
                }
            }
            {% else %}
            eventInvitationValid = true;
            {% endif %}
        </script>
    {% endblock js_script %}
</div>