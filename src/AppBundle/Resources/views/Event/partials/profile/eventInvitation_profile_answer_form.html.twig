{# Formulaire de réponse de la présence de l'invité à l'événement (invitation en cours sur la page d'un événement)
Données d'entrée :
- userEventInvitation (EventInvitation) Invitation de l'utilisateur de l'utilisateur
- userEventInvitationAnswerForm (Form) Formulaire de réponse à l'invitation
#}

<div id="eventInvitation-answer-panel" class="p-l-10 p-r-10 text-center">
    {% if userEventInvitation.status is constant('AppBundle\\Utils\\enum\\EventInvitationStatus::CANCELLED') %}
        <div class="well well-sm palette-Purple-300 bg c-white">{{ "eventInvitation.message.warning.invitation_cancelled"|trans }}</div>
    {% else %}
        {{ form_start(userEventInvitationAnswerForm, {'action': path('displayEvent', {'token':userEventInvitation.event.token}), 'attr':{'id':'userEventInvitationAnswer','class':'answer-form'}}) }}

        <h4>{{ "eventInvitation.form.answer.label"|trans }}
            {{ form_row(userEventInvitationAnswerForm.answer,{
                'label_attr':{'class' : 'sr-only'},
                'attr':{'type' : 'answer'}
            }) }}
        </h4>

        {{ form_rest(userEventInvitationAnswerForm) }}
        {{ form_end(userEventInvitationAnswerForm) }}

        <script>
            $("input[name='event_invitation_anwser[answer]']").on('change', function (e) {
                $(this).closest('form').submit();
            });
            $('form#userEventInvitationAnswer').on('submit', function (e) {
                e.preventDefault();
                var form = $(this);
                if (!eventInvitationValid && askGuestName !== undefined) {
                    askGuestName(e, submitEventInvitationAnswerForm, [form, e], function(){
                        $('form#userEventInvitationAnswer')[0].reset();
                        $('form#userEventInvitationAnswer label').removeClass('active');
                        $('form#userEventInvitationAnswer input[checked=checked]').parent().addClass('active');
                    });
                }else{
                    submitEventInvitationAnswerForm([form, e]);
                }
            });

            function submitEventInvitationAnswerForm(params){
                var form = params[0];
                var e = params[1];
                ajaxFormSubmission(form, e, null, function (dataOrJqXHR, textStatus, jqXHROrErrorThrown) {
                    if (dataOrJqXHR.hasOwnProperty('responseJSON')) {
                        var responseJSON = dataOrJqXHR['responseJSON'];
                        if (responseJSON.hasOwnProperty('data') && responseJSON['data'].hasOwnProperty('eventInvitationValid') && !responseJSON['data']['eventInvitationValid']) {
                            {# Ce cas ne devrait pas se produire mais au cas où, il faut traiter le retour de la vérification cote serveur, en conservant la vue de manière cohérente #}
                            $('form#userEventInvitationAnswer')[0].reset();
                            $('form#userEventInvitationAnswer label').removeClass('active');
                            $('form#userEventInvitationAnswer input[checked=checked]').parent().addClass('active');
                        }
                    }
                }, null);
            }
        </script>
    {% endif %}
</div>