{# Données d'entrée :
- userEventInvitation (EventInvitation) L'invitation à afficher (inclu l'événement concerné)
#}
{% set eventHeaderLayout = '' %}
{% if userEventInvitation.event.whereGooglePlaceId is not null %}
    {% set eventHeaderLayout = 'col-sm-8' %}
{% endif %}

<div class="row">
    <div class="col-xs-12 {{ eventHeaderLayout }}">
        <dl class="dl-horizontal">
            <dt>{{ "event.form.when.label"|trans }}</dt>
            <dd>{{ userEventInvitation.event.when is not null?userEventInvitation.event.when|localizeddate:'-' }}</dd>
            <dt>{{ "event.form.whereName.label"|trans }}</dt>
            <dd>{{ userEventInvitation.event.whereName is not empty?userEventInvitation.event.whereName:"-" }}</dd>
            <dt>{{ "event.form.responseDeadline.label"|trans }}</dt>
            <dd>{{ userEventInvitation.event.responseDeadline is not null ? userEventInvitation.event.responseDeadline|localizeddate:'-'}}</dd>
            {# Todo: décommenter
             <dt>{{ "event.form.status.label"|trans }}</dt>
            <dd><span class="label label-info">{{ userEventInvitation.event.status|trans }}</span></dd>#}
        </dl>
        <div class="bg palette-Grey-100 p-10 m-t-15 m-b-15">
            <dt class="p-b-5">{{ "event.form.description.label"|trans }}</dt>
            <dd>{{ userEventInvitation.event.description }}</dd>
        </div>
        {# Todo: décommenter
        {% if userEventInvitation.event.invitationOnly %}
            <div class="text-danger">
                <i class="zmdi zmdi-close-circle"></i> {{ "event.form.invitationOnly.text.true"|trans }}
            </div>
        {% else %}
            <div class="text-success">
                <i class="zmdi zmdi-check"></i> {{ "event.form.invitationOnly.text.false"|trans }}
            </div>
        {% endif %}#}
        {% if userEventInvitation.event.guestsCanInvite %}
            <div class="text-success">
                <i class="zmdi zmdi-check"></i> {{ "event.form.guestsCanInvite.text.true"|trans }}
            </div>
        {% else %}
            <div class="text-danger">
                <i class="zmdi zmdi-close-circle"></i> {{ "event.form.guestsCanInvite.text.false"|trans }}
            </div>
        {% endif %}
    </div>
    {% if userEventInvitation.event.whereGooglePlaceId is not null %}
        <div class="col-xs-12 col-sm-4">
            <div id="eventShowGoogleMap" style="height: 200px;"></div>
        </div>
    {% endif %}
</div>


<script>
    var mapEventShow = null;
    var boundsEventShow = null;

    function initEventShowMap() {
        var mapDiv = document.getElementById('eventShowGoogleMap');
        if (mapDiv != null) {
            mapEventShow = new google.maps.Map(mapDiv, {
                center: {lat: 47, lng: 2.30},
                zoom: 6,
                scrollwheel: false
            });

            boundsEventShow = new google.maps.LatLngBounds();
            var service = new google.maps.places.PlacesService(mapEventShow);

            {% if userEventInvitation.event.whereGooglePlaceId != null %}

            var infowindow = new google.maps.InfoWindow();
            service.getDetails({
                        placeId: '{{ userEventInvitation.event.whereGooglePlaceId }}'
                    }
                    ,
                    function (place, status) {
                        if (status === google.maps.places.PlacesServiceStatus.OK) {
                            var marker = new google.maps.Marker({
                                map: mapEventShow,
                                position: place.geometry.location
                            });
                            {# Permet de s'assurer que la map est pas trop zoomée, a priori  le zoom du firbounds se fait en asynchrone,
                                                donc il faut choper un event, et ne le fait que au premier passage#}

                            google.maps.event.addListener(mapEventShow, 'bounds_changed', function (event) {
                                if (mapEventShow.getZoom() > 15 && mapEventShow.initialZoom == true) {
                                    // Change max/min zoom here
                                    mapEventShow.setZoom(15);
                                    mapEventShow.initialZoom = false;
                                }
                            });
                            mapEventShow.initialZoom = true;
                            // Rendre le marker clickable avec le nom
                            google.maps.event.addListener(marker, 'click', function () {
                                infowindow.setContent(place.name);
                                infowindow.open(mapEventShow, this);
                            });
                            boundsEventShow.extend(place.geometry.location)
                            mapEventShow.fitBounds(boundsEventShow);
                        }
                    }
            );
            {% endif %}
        }
    }
</script>

