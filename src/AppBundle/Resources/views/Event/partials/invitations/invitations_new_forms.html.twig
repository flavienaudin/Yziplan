{# Données d'entrée :
- userEventInvitation (EventInvitation) L'invitation de l'utilisateur "connecté"
- invitationsForm (Form|null) Formulaire permettant d'inviter (renseignement des e-mails des invités)
#}

<div id="invitations_forms_container">
    <div class="m-t-10 fit-width" id="shareEventFB_container">
        <button class="btn btn-lg btn-block btn-facebook" id="shareEventFB" name="provider">
            <i class="zmdi zmdi-facebook zmdi-hc-lg"></i> {{ "invitations.button.via_facebook"|trans }}
        </button>
    </div>

    <div class="m-t-10 fit-width">
        <button type="button" id="loadContacts" class="btn btn-lg btn-block btn-danger waves-effect">
            <i class="zmdi zmdi-google-plus zmdi-hc-lg"></i> {{ "invitations.button.via_gmail_contact.show"|trans }}</button>
        <button type="button" id="hideContacts" class="btn btn-lg btn-block btn-danger waves-effect">
            {{ "invitations.button.via_gmail_contact.hide"|trans }}</button>
        {{ include('@App/Event/partials/invitations/gmail_contacts_selection.html.twig', {'event' : userEventInvitation.event}) }}
    </div>

    {% if invitationsForm is not null %}
        <div class="m-t-10 palette-Teal-50 bg p-15">
            {{ form_start(invitationsForm, {'action':path('displayEvent',{'token':userEventInvitation.event.token}),'attr':{'id':'eventInvitations'}}) }}
            {{ form_row(invitationsForm.invitations, {
                'id':'eventInvitations_newEmails',
                'label':'invitations.form.invitations.label',
                'attr':{'class':'contacts'},
                'help':'invitations.form.invitations.help'|trans
            }) }}
            <div class="text-center">
                <button type="submit" class="btn btn-primary waves-effect" data-loading-text="{{ "global.button.loading"|trans }}"
                        data-original-text="{{ "invitations.button.send_invitation"|trans }}">
                    {{ "invitations.button.send_invitation"|trans }}
                </button>
            </div>
            {{ form_end(invitationsForm) }}
        </div>
    {% endif %}

    {% if userEventInvitation.creator or userEventInvitation.administrator or not userEventInvitation.event.invitationOnly %}
        <div id="event_public_invitation_display" class="m-t-10 palette-Teal-50 bg p-15 {{ (userEventInvitation.creator or userEventInvitation.administrator) and
        userEventInvitation.event.invitationOnly?'hidden' }}">
            <div class="form-group animated">
                <label class="control-label text-info" for="url_event_public_invitation">{{ "event.form.public_invitation.label"|trans }}</label>
                <div class="input-group">
                    <input id="url_event_public_invitation" type="text" class="form-control" readonly="readonly"
                           value="{{ url("displayEvent",{'token':userEventInvitation.event.token}) }}"> <span class="input-group-btn">
                                <button type="button" id="btn_url_event_public_invitation" class="btn btn-primary" data-clipboard-target="#url_event_public_invitation">
                                    <i class="zmdi zmdi-copy"></i>{{ "global.button.copy"|trans }}</button>
                            </span>
                </div>
            </div>
        </div>
    {% endif %}

    <script>
        var $newEmailsSelectize = null;
        $(document).ready(function () {
            {% if invitationsForm is not null %}
            var $hideContactsButton = $('#hideContacts');
            var $loadContactsButton = $('#loadContacts');
            $hideContactsButton.hide();
            $loadContactsButton.on('click', function (e) {
                authClick();
                $loadContactsButton.hide();
                $hideContactsButton.show();
            });
            $hideContactsButton.on('click', function (e) {
                hideContacts();
                $hideContactsButton.hide();
                $loadContactsButton.show();
            });

            // initialize the Selectize control
            var $select = $('#eventInvitations_newEmails').selectize({
                persist: false,
                maxItems: null,
                placeholder: "{{ "invitations.form.invitations.placeholder"|trans }}",
                valueField: 'value',
                labelField: 'text',
                searchField: ['text', 'value'],
                hideSelected: true,
                createOnBlur: true,
                render: {
                    item: renderUserAsItem,
                    option: renderUserAsOption,
                    option_create: renderOptionCreate
                },
                createFilter: createFilterEmail,
                create: createUser
                {#{% if is_granted("IS_AUTHENTICATED_REMEMBERED") %}
                , preload: 'focus',
                load: function (query, callback) {
                    $.ajax({
                        url: '{{ path('searchContacts') }}',
                        data: {'search': query},
                        type: 'POST',
                        error: function () {
                            callback();
                        },
                        success: function (res) {
                            callback(res.slice(0, 15));
                        }
                    });
                }
                {% endif %}#}
            });
            // fetch the instance
            $newEmailsSelectize = $select[0].selectize;

            $('form#eventInvitations').on('submit', function (e) {
                if (!eventInvitationValid && askGuestName !== undefined) {
                    e.preventDefault();
                    askGuestName();
                } else {
                    ajaxFormSubmission(this, e, function (responseJSON, textStatus, jqXHR) {
                        $hideContactsButton.click();
                        $('#invitations_new_modal').modal('hide');
                    }, function (jqXHR, textStatus, errorThrown) {
                        if (jqXHR.hasOwnProperty('responseJSON')) {
                            var responseJSON = jqXHR['responseJSON'];
                            if (responseJSON.hasOwnProperty('data') && responseJSON['data'].hasOwnProperty('eventInvitationValid') && !responseJSON['data']['eventInvitationValid']) {
                                if (!eventInvitationValid && askGuestName !== undefined) {
                                    askGuestName();
                                }
                            }
                        }
                    }, null);
                }
            });
            {% endif %}

            if (isMobile()) {
                $('#shareEventFB_container').remove();
            } else {
                // Initialize invitation via facebook
                $.ajaxSetup({cache: true});
                $.getScript('//connect.facebook.net/fr_FR/all.js', function () {
                    FB.init({
                        appId: {{ facebook_client_id }},
                        xfbml: true,
                        version: 'v2.8'
                    });
                });

                // React to the invite via facebook button
                $('#shareEventFB').click(function () {
                    var pageLink = $("#url_event_public_invitation").val();
                    FB.ui({
                        method: 'send',
                        link: pageLink
                    });
                });
            }
        });
    </script>
</div>