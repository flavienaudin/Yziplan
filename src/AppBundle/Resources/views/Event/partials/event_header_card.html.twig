{# Données d'entrée :
- userEventInvitation (EventInvitation) L'invitation à afficher (inclu l'événement concerné)
- eventForm (Form|null) Formulaire d'édition des information général de l'événement (si les droits le permettent)
- eventTemplateSettingsForm (Form|null) Formulaire de configuration des options de duplication de type "Template"
- eventRecurrenceSettingsForm (Form) Formulaire de configuration des options de duplication de type "Recurrence"
- thread (Thread) Le fil de discussion de l'événement
- comments(Comment[]) Les commentaires appartenant au fil de discussion de l'événement
#}

<div class="card z-depth-1" id="event-header-card">
    {{ include('@App/Event/partials/event_header_card_header.html.twig', {'userEventInvitation':userEventInvitation, 'editEvent' : eventForm is not null }) }}

    <div class="card-body card-padding-xs">
        <div class="pmb-block m-0 p-0" id="pmbblock_event_header">
            <div class="media">
                {% if eventForm is not null or eventTemplateSettingsForm is not null or eventTemplateSettingsForm is not null or userEventInvitation.creator %}
                    <div class="pull-right">
                        <ul class="actions">
                            <li class="dropdown">
                                <a href="" data-toggle="dropdown" aria-expanded="false"> <i class="zmdi zmdi-settings"></i> </a>
                                <ul class="dropdown-menu dropdown-menu-right dm-icon">
                                    {% if eventForm is not null %}
                                        <li>
                                            <a id="event_header_edit_information" href="#eventEditModal" data-toggle="modal"><i class="zmdi zmdi-edit"></i> {{ "event.menu.edit"|trans }}</a>
                                        </li>
                                    {% endif %}
                                    {% if eventTemplateSettingsForm is not null or eventTemplateSettingsForm is not null %}
                                        <li><a id="event_header_duplication_settings" href="#eventDuplicationSettingsModal" data-toggle="modal"><i
                                                        class="zmdi zmdi-plus-circle-o-duplicate"></i> {{ "event.menu.duplication"|trans }}</a></li>
                                    {% endif %}
                                    {% if is_granted(constant('AppBundle\\Security\\EventVoter::CANCEL'), userEventInvitation) %}
                                        <li><a id="event_header_cancel_event" href="{{ path('cancelEvent', {'token': userEventInvitation.event.token}) }}"> <i
                                                        class="zmdi zmdi-delete c-red"></i> {{ "event.menu.cancel"|trans }}</a></li>
                                    {% endif %}
                                </ul>
                            </li>
                        </ul>
                    </div>
                {% endif %}
                {% if event.status == constant('AppBundle\\Utils\\enum\\EventStatus::DEPROGRAMMED') %}
                    <div class="media-body">
                        <span class="text-danger">{{ "eventstatus.deprogrammed"|trans }}</span>
                    </div>
                {% endif %}
            </div>
            <div class="pmbb-body">
                {{ include("@App/Event/partials/event_header_card_show.html.twig", {'userEventInvitation':userEventInvitation}) }}
            </div>
        </div>
    </div>

    {% if thread is defined and thread is not null %}
        <div id="event_comment_thread" data-thread="{{ thread.id }}" class="commentable_thread wall-comment-list">
            {% include 'FOSCommentBundle:Thread:comments.html.twig' with {'comments':comments, 'thread':thread, 'view':'flat', 'userEventInvitation':userEventInvitation} %}
        </div>
    {% endif %}

    <script>
        $(document).ready(function () {
            if (typeof google === 'object' && typeof google.maps === 'object') {
                initEventShowMap();
            }

            $('#event_header_cancel_event').on('click', function (e) {
                e.preventDefault();
                var $link = $(this);
                var swalOptions = {
                    title: '{{ "event.alert.confirm_cancellation.title"|trans }}',
                    html: '{{ "event.alert.confirm_cancellation.message"|trans|raw }}',
                    type: "warning",
                    showCancelButton: true,
                    cancelButtonText: '{{ "global.button.cancel"|trans }}',
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: '{{ "global.button.yes"|trans }}',
                    showLoaderOnConfirm: true
                };
                {% if event.guests|length > 0 %}
                swalOptions.html = swalOptions.html + "<p><small>{{ "event.alert.confirm_cancellation.input.label"|trans|e }}</small></p>";
                swalOptions.input = "textarea";
                swalOptions.inputPlaceholder = '{{ "event.alert.confirm_cancellation.input.placeholder"|trans }}';
                {% endif %}
                swal(swalOptions).then(function (input) {
                    var data = null;
                    if(input !== true && input !== ''){
                        data = {"reason": input}
                    }
                    ajaxRequest($link, data, e, null, null, null);
                });
            });

            if (typeof window.fos !== 'undefined' && typeof window.fos.Comment !== "undefined") {
                window.fos.Comment.thread_container = $('.commentable_thread ');
                window.fos.Comment.initializeListeners();
            }

            {% if  thread is defined and thread is not null %}
            /** Fonction pour eviter le double envoi de commentaire */
            $('#event_comment_thread')
                .on('fos_comment_add_comment', function (event, commentHtml) {
                    $('#event_comment_thread .fos_comment_submit > button[type=submit], #event_comment_thread .fos_comment_submit > input[type=submit]').removeAttr("disabled");
                })
                .on('fos_comment_submitting_form', function () {
                    $('#event_comment_thread .fos_comment_submit > button[type=submit], #event_comment_thread .fos_comment_submit > input[type=submit]').attr("disabled", "disabled");
                });
            {% endif %}
        });
    </script>
</div>
