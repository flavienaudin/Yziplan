{# Données d'entrée :
- pollProposal (PollProposal) La proposition à afficher
- userModuleInvitation (ModuleInvitaion) L'invitation du module de l'utilisateur
- moduleInvitations ([ModuleInvitaion]) les invitations du module
#}

<tr id="pp_display_row_{{ pollProposal.id }}">
    {# Affichage de la proposition ################################################################################################################################################################ #}
    <td>
        <div class="media">
            <div class="pull-right">
                {% if pollProposal.creator == userModuleInvitation %}
                    <div class="media-object">
                        <div class="btn-group-vertical btn-group-xs" role="group" aria-label="...">
                            <a href="{{ path('pollProposalEditionForm', {"pollProposalId":pollProposal.id, "moduleInvitationToken" : userModuleInvitation.token}) }}" role="button"
                               id="getPPEditionForm_{{ pollProposal.id }}" class="btn btn-default"> <i class="zmdi zmdi-edit"></i></a> <a
                                    href="{{ path('removePollProposal', {"pollProposalId":pollProposal.id, "moduleInvitationToken" : userModuleInvitation.token}) }}" role="button"
                                    id="removePP_{{ pollProposal.id }}" class="btn btn-default c-red"> <i class="zmdi zmdi-delete"></i></a>
                        </div>
                        <script>
                            $('#getPPEditionForm_{{ pollProposal.id }}').on('click', function (e) {
                                e.preventDefault();
                                var $form = $(this);
                                if (!eventInvitationValid && askGuestName !== undefined) {
                                    askGuestName(e, submitGetPollProposalEditionForm, [$form, e, '{{ pollProposal.pollmodule.module.token }}', '{{ pollProposal.id }}']);
                                } else {
                                    submitGetPollProposalEditionForm([$form, e, '{{ pollProposal.pollmodule.module.token }}', '{{ pollProposal.id }}']);
                                }
                            });

                            function submitGetPollProposalEditionForm(params) {
                                var form = params[0];
                                var e = params[1];
                                var moduleToken = params[2];
                                var pollProposalId = params[3];

                                var moduleModalsContainer = $('#modal-container-block-' + moduleToken);


                                var modals = $(moduleModalsContainer).children('#pollProposalEdition_' + pollProposalId + '_modal_id');
                                if ($(modals).length > 0) {
                                    $(modals).first().modal('toggle');
                                } else {
                                    ajaxRequest(form, null, e, function (responseJSON, textStatus, jqXHR) {
                                        console.log(moduleModalsContainer);
                                        $(moduleModalsContainer).children('#pollProposalEdition_' + pollProposalId + '_modal_id').first().modal('show');
                                    }, null, null);
                                }
                            }

                            $('#removePP_{{ pollProposal.id }}').on('click', function (e) {
                                e.preventDefault();
                                var removePPLink = $(this);
                                if (!eventInvitationValid && askGuestName !== undefined) {
                                    askGuestName(e, deletePollProposalAction([removePPLink, e]));
                                } else {
                                    deletePollProposalAction([removePPLink, e]);
                                }
                            });
                            function deletePollProposalAction(params) {
                                var removePPLink = params[0];
                                var e = params[1];
                                swal({
                                    title: '{{ "pollmodule.alert.confirm_proposal_deletion.title"|trans }}',
                                    text: '{{ "pollmodule.alert.confirm_proposal_deletion.message"|trans }}',
                                    type: "warning",
                                    showCancelButton: true,
                                    confirmButtonColor: "#DD6B55",
                                    confirmButtonText: '{{ "global.button.delete"|trans }}',
                                    showLoaderOnConfirm: true
                                }).then(function () {
                                    ajaxRequest(removePPLink, null, e, function (responseJSON, textStatus, jqXHR) {
                                        if (responseJSON.hasOwnProperty('data') && responseJSON['data'].actionResult === true) {
                                            $('#pp_display_row_{{ pollProposal.id }}').remove();
                                            var moduleModalsContainer = $('#modal-container-block-{{ userModuleInvitation.module.token }}');
                                            $(moduleModalsContainer).children('#pollProposalEdition_{{ pollProposal.id }}_modal_id').each(function () {
                                                $(this).remove();
                                            });
                                            if ($('#pp-row-group-{{ userModuleInvitation.module.token }} > tr').length == 1) {
                                                $('#pollModuleDisplayAllResult_{{ userModuleInvitation.module.token }}_button').hide();
                                            }
                                        }
                                    }, function (jqXHR, textStatus, errorThrown) {

                                    }, function (dataOrJqXHR, textStatus, jqXHROrErrorThrown) {
                                        $grid = $('.grid');
                                        if ($grid[0]) {
                                            $grid.masonry('layout');
                                        }
                                    });
                                });
                            }
                        </script>
                    </div>
                {% endif %}
            </div>
            <div class="media-body">
                <div {% if pollProposal.description is not empty %}data-toggle="tooltip" data-container="body" title="{{ pollProposal.description }}"{% endif %}>
                    {# Les elements sont sous forme de tableau a 2 dimentions, mais il n'y a qu'un element dans la deuxieme
                           c'est en prévision du futur #}
                    {% set ppElts = pollProposal.getAllElements %}
                    {% if ppElts[constant('AppBundle\\Utils\\enum\\PollElementType::DATETIME')] is defined %}
                        {% set ppElt = ppElts[constant('AppBundle\\Utils\\enum\\PollElementType::DATETIME')][0] %}
                        {% set endDate =  (ppElts[constant('AppBundle\\Utils\\enum\\PollElementType::END_DATETIME')] is defined ? ppElts[constant('AppBundle\\Utils\\enum\\PollElementType::END_DATETIME')][0] : null) %}
                        {% set has2Date = endDate is not null and endDate.hasEndDate and ppElt.value|localizeddate("medium", "none", null, null,'ddMMyyyy') != endDate.value|localizeddate("medium", "none", null, null,'ddMMyyyy') %}
                        <div>
                            {% if not has2Date %}
                                <div style="display:inline-block; vertical-align: middle;">
                                    <div style="font-size:12px; font-weight: bold; text-transform: capitalize;">{{ ppElt.value|localizeddate("medium", "none", null, null,'MMM') }}</div>
                                    <div style="font-size:10px; text-transform: uppercase;">{{ ppElt.value|localizeddate("medium", "none", null, null,"ccc") }}</div>
                                </div>
                                <div class="p-l-5 p-r-5" style="display:inline-block; font-size:22px; vertical-align: middle;">
                                    <strong>{{ ppElt.value|localizeddate("medium", "none", null, null,'dd') }}</strong>
                                </div>
                                {% if ppElt.hasTime %}
                                    <div style="display:inline-block; vertical-align: middle;">
                                        <div style="font-size:14px">{{ ppElt.value|localizeddate("medium", "none", null, null,'HH:mm') }}</div>
                                        {% if not has2Date and endDate is not null and endDate.hasEndTime %}
                                            <div style="font-size:14px">{{ endDate.value|localizeddate("medium", "none", null, null,'HH:mm') }}</div>
                                        {% endif %}
                                    </div>
                                {% endif %}
                            {% else %}
                                <div>
                                    <div style=" display:inline-block; width: 45px; font-style:italic">Début :</div>
                                    <div style=" display:inline-block;">{{ ppElt.value|localizeddate("medium", "none", null, null,'ccc dd MMM') }}{% if ppElt.hasTime %} {{ ppElt.value|localizeddate("medium", "none", null, null,'HH:mm') }}{% endif %}</div>
                                </div>
                                <div>
                                    <div style=" display:inline-block; width:45px; font-style:italic">Fin :</div>
                                    <div style=" display:inline-block;">{{ endDate.value|localizeddate("medium", "none", null, null,'ccc dd MMM') }}{% if endDate.hasEndTime %} {{ endDate.value|localizeddate("medium", "none", null, null,'HH:mm') }}{% endif %}</div>
                                </div>
                            {% endif %}
                        </div>
                    {% else %}
                        <div>
                            {% if ppElts[constant('AppBundle\\Utils\\enum\\PollElementType::PICTURE')] is defined %}
                                <div class="pp-elt">
                                    <div class="pp-elt-picture"></div>
                                    {#<img src="{{ asset('bundles/app/img/index/organisation.jpeg') }}" alt="test" height="50" width="50">#}
                                    {#{{ ppElts[constant('AppBundle\\Utils\\enum\\PollElementType::PICTURE')][0].getValue }}#}
                                </div>
                            {% endif %}
                            {% if ppElts[constant('AppBundle\\Utils\\enum\\PollElementType::STRING')] is defined %}
                                <div class="pp-elt">
                                    {{ ppElts[constant('AppBundle\\Utils\\enum\\PollElementType::STRING')][0].getValue }}
                                </div>
                            {% endif %}
                            {# Picture + string #}
                        </div>
                        {# Text area #}
                        {% if ppElts[constant('AppBundle\\Utils\\enum\\PollElementType::RICHTEXT')] is defined %}
                            <div>
                                <div class="modal fade" id="pollModuleElementInfo_{{ pollProposal.id }}_modal" tabindex="-1" role="dialog" aria-hidden="true">
                                    <div class="modal-dialog">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true"><i class="zmdi zmdi-close"></i></span></button>
                                                <h4 class="modal-title">{{ "pollmodule.poll_element.more"|trans }}:</h4>
                                            </div>
                                            {% if ppElts[constant('AppBundle\\Utils\\enum\\PollElementType::PICTURE')] is defined %}
                                                <div class="modal-body text-center m-b-10">
                                                    <img class="pp-elt-picture-info" src="{{ asset('bundles/app/img/index/organisation.jpeg') }}" alt="test">
                                                </div>
                                            {% endif %}
                                            <div class="modal-body">
                                                <p>{{ ppElts[constant('AppBundle\\Utils\\enum\\PollElementType::RICHTEXT')][0].getValue|raw }}</p>
                                            </div>
                                            <div class="modal-footer">
                                                <button type="button" class="btn btn-link" data-dismiss="modal">{{ "global.button.close"|trans }}</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <a class="btn-icon-text c-blue p-l-0 text" id="pollModuleElementInfo_{{ pollProposal.id }}_button"
                                   href="#pollModuleElementInfo_{{ pollProposal.id }}_modal" data-toggle="modal">
                                    <i class="zmdi zmdi-info"></i>{{ "pollmodule.poll_element.more"|trans }}
                                </a>
                            </div>
                        {% endif %}
                    {% endif %}
                </div>
            </div>
        </div>
    </td>

    {# Affichage du résultat ####################################################################################################################################################################### #}
    <td class="response-column">
        {{ include('@App/Event/module/pollModulePartials/pollProposalGuestResponseRowDisplay_result.html.twig', {
            "pollProposal":pollProposal,
            "moduleInvitations":moduleInvitations
        }) }}
    </td>

    {#  Affichage des votes ######################################################################################################################################################################## #}
    <td class="voting-column">
        {% if pollProposal.pollModule.votingType == constant('AppBundle\\Utils\\enum\\PollModuleVotingType::AMOUNT') %}
            {{ include('@App/Event/module/pollModulePartials/pollProposalGuestResponseRowDisplay_vote_amount.html.twig', {
                "pollProposal":pollProposal,
                "userModuleInvitation":userModuleInvitation,
                "moduleInvitations":moduleInvitations
            }) }}
        {% elseif pollProposal.pollModule.votingType == constant('AppBundle\\Utils\\enum\\PollModuleVotingType::RANKING') %}
            {{ include('@App/Event/module/pollModulePartials/pollProposalGuestResponseRowDisplay_vote_ranking.html.twig', {
                "pollProposal":pollProposal,
                "userModuleInvitation":userModuleInvitation,
                "moduleInvitations":moduleInvitations
            }) }}
        {% else %}{# Dans le cas d'un yes/maybe/no ou d'un yes/no #}
            {{ include('@App/Event/module/pollModulePartials/pollProposalGuestResponseRowDisplay_vote_yesno.html.twig', {
                "pollProposal":pollProposal,
                "userModuleInvitation":userModuleInvitation,
                "moduleInvitations":moduleInvitations
            }) }}
        {% endif %}
    </td>
</tr>
