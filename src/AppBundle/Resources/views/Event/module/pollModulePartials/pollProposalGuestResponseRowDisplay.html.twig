{# Données d'entrée :
- pollProposal (PollProposal) La proposition à afficher
- moduleInvitations ([ModuleInvitaion]) les invitations du module
- userModuleInvitation (ModuleInvitaion) L'invitation du module de l'utilisateur
#}

<div class="pc-ligne" id="pp_display_row_{{ pollProposal.id }}">
    <div class="pcl-celulle ">
        {% for ppElt in pollProposal.pollProposalElements %}
            {% set val = attribute(ppElt, 'val'~ppElt.pollElement.type) %}
            {{ ppElt.pollElement.name|trans }} : {{ ppElt.pollElement.type==constant('AppBundle\\Utils\\enum\\PollElementType::DATETIME')?val|localizeddate:val }}{% if not loop.last %}<br>{% endif %}
        {% endfor %}
    </div>
    {% if userModuleInvitation is defined and userModuleInvitation is not null %}
        <div class="pcl-celulle">
            {% set responseValue = null %}
            {% for ppResponse in userModuleInvitation.pollProposalResponses if ppResponse.pollProposal == pollProposal %}
                {% set responseValue = (ppResponse.answer is not empty?ppResponse.answer:null) %}
            {% endfor %}
            <div class="btn-group-vertical btn-group-xs pollproposal-response" data-toggle="buttons" role="group">
                <label class="btn palette-Light-Green bg waves-effect {{ responseValue == "yes"?'active' }}"> <input type="radio" autocomplete="off" name="pollProposalReponse_{{ pollProposal.id }}"
                                                                                                                     value="yes" {{ responseValue == "yes"?'checked="checked"' }}> <i
                            class="zmdi zmdi-thumb-up"></i> </label> <label class="btn palette-Amber bg waves-effect {{ responseValue == "maybe"?'active' }}"> <input type="radio" autocomplete="off"
                                                                                                                                                                      name="pollProposalReponse_{{ pollProposal.id }}"
                                                                                                                                                                      value="maybe" {{ responseValue == "maybe"?'checked="checked"' }}>
                    <i class="zmdi zmdi-thumb-up-down"></i> </label> <label class="btn palette-Red bg waves-effect {{ responseValue == "no"?'active' }}"> <input type="radio" autocomplete="off"
                                                                                                                                                                 name="pollProposalReponse_{{ pollProposal.id }}"
                                                                                                                                                                 value="no" {{ responseValue == "no"?'checked="checked"' }}>
                    <i class="zmdi zmdi-thumb-down"></i> </label>
            </div>
        </div>
        <script>
            $("input[name='pollProposalReponse_{{ pollProposal.id }}']").on('change', function () {
                var $data = {
                    'pollProposalId': {{ pollProposal.id }},
                    'userModuleInvitationToken': "{{ userModuleInvitation.token }}",
                    'value': $(this).val()
                };
                var icon = $(this).parent("label");
                var preloader = $('.at-global-preloader');
                $(preloader).show();
                $.ajax({
                    url: "{{ path('answerPollModuleProposal') }}",
                    method: "POST",
                    data: $data
                }).done(function (responseJSON, textStatus, jqXHR) {
                    var animation = 'bounceIn';
                    icon.addClass('animated ' + animation);
                    setTimeout(function () {
                        icon.removeClass(animation);
                    }, 1000);
                }).fail(function (jqXHR, textStatus, errorThrown) {
                }).always(function (responseDataOrJSON) {
                    if (responseDataOrJSON.responseJSON) {
                        responseDataOrJSON = responseDataOrJSON.responseJSON;
                    }
                    if (responseDataOrJSON.messages) {
                        var messages = responseDataOrJSON.messages;
                        for (var messageType in messages) {
                            if (messages.hasOwnProperty(messageType)) {
                                messages[messageType].forEach(function (mess) {
                                    toastr[messageType](mess);
                                });
                            }
                        }
                    }
                    $(preloader).hide();
                });
            });
        </script>
    {% endif %}
    {% for moduleInvitation in moduleInvitations if (userModuleInvitation is not defined or userModuleInvitation is null or moduleInvitation.id != userModuleInvitation.id) %}
        <div class="pcl-celulle">
            {% for ppResponse in moduleInvitation.pollProposalResponses if ppResponse.pollProposal == pollProposal %}
                {{ ppResponse.answer is empty?'?':ppResponse.answer }}
            {% else %}
                ?
            {% endfor %}
        </div>
    {% endfor %}
    <div class="pcl-celulle">
        {% if userModuleInvitation is defined and userModuleInvitation is not null and pollProposal.creator == userModuleInvitation %}
            <a href="{{ path('pollProposalEditionForm', {"pollProposalId":pollProposal.id, "moduleInvitationToken" : userModuleInvitation.token}) }}" id="getPPEditionForm_{{ pollProposal.id }}">Edition</a>
            <a href="{{ path('removePollProposal', {"pollProposalId":pollProposal.id, "moduleInvitationToken" : userModuleInvitation.token}) }}" class="text-danger"
               id="removePP_{{ pollProposal.id }}">Supprimer</a>
            <script>
                $('#getPPEditionForm_{{ pollProposal.id }}').on('click', function (e) {
                    e.preventDefault();
                    var moduleModalsContainer = $('#modal-container-block-{{ pollProposal.pollmodule.module.token }}');
                    var modals = $(moduleModalsContainer).children('#pollProposalEdition_{{ pollProposal.id }}_modal_id');
                    if ($(modals).length > 0) {
                        $(modals).first().modal('toggle');
                    } else {
                        ajaxRequest($(this), null, e, function (responseJSON, textStatus, jqXHR) {
                            $(moduleModalsContainer).children('#pollProposalEdition_{{ pollProposal.id }}_modal_id').first().modal('show');
                        }, null, null);
                    }
                });
                $('#removePP_{{ pollProposal.id }}').on('click', function (e) {
                    e.preventDefault();
                    var removePPLink = $(this);
                    swal({
                        title: '{{ "pollmodule.alert.confirm_proposal_deletion.title"|trans }}',
                        text: '{{ "pollmodule.alert.confirm_proposal_deletion.message"|trans }}',
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: '{{ "global.button.delete"|trans }}',
                        closeOnConfirm: true,
                        showLoaderOnConfirm: true
                    }, function (isConfirm) {
                        if (isConfirm) {
                            ajaxRequest(removePPLink, null, e, function (responseJSON, textStatus, jqXHR) {
                                if (responseJSON.hasOwnProperty('data') && responseJSON['data'].actionResult === true) {
                                    $('#pp_display_row_{{ pollProposal.id }}').remove();
                                    var moduleModalsContainer = $('#modal-container-block-{{ pollProposal.pollmodule.module.token }}');
                                    $(moduleModalsContainer).children('#pollProposalEdition_{{ pollProposal.id }}_modal_id').each(function () {
                                        $(this).remove();
                                    });
                                }
                            }, null, null);
                        }
                    });
                });
            </script>
        {% endif %}
    </div>
</div>