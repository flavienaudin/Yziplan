{# Données d'entrée :
- moduleForm : Form|null
-
#}

<div class="card {% block moduleCardClass %}{% endblock %}" id="module-{{ module.token }}">
    {% if moduleForm is not null %}
        {{ form_start(moduleForm, {'action':path('displayEvent', {'token':module.event.token}), 'attr':{'id':"moduleForm-"~module.token} }) }}
    {% endif %}
    <div class="card-header {% block moduleHeaderClass %}{% endblock %}" {% block moduleHeaderAttributs %}{% endblock %}>
        {% block moduleHeader %}
            <div class="media">
                <div class="pull-left">
                    {% block mhMediaLeft %}{% endblock mhMediaLeft %}
                </div>
                <div class="pull-right">
                    {% block mhMediaRight %}
                        <a href="#">{{ "global.link.top"|trans }}</a>
                    {% endblock mhMediaRight %}
                </div>
                <div class="media-body">
                    {% block mhMediaBody %}
                        {% if moduleForm is not null %}
                            <div class="form-group">
                                {{ form_label(moduleForm.name, 'module.form.name.label', {'label_attr':{'class':'sr-only'}}) }}
                                <div class="fg-line">
                                    {{ form_widget(moduleForm.name, {'attr':{'placeholder':'module.form.name.placeholder'}}) }}
                                    {{ form_errors(moduleForm.name) }}
                                </div>
                            </div>
                            {#{% if module.creator != null and module.creator.displayableName is not empty %}
                                <h2>
                                    <small>{{ module.creator.displayableName }}</small>
                                </h2>
                            {% endif %}#}
                            <h2>
                                <small>TODO !: Module creator name</small>
                            </h2>
                        {% else %}
                            <h2>{{ module.name is not empty?module.name }}
                                {#{% if module.creator != null and module.creator.displayableName is not empty %}
                                    <small>{{ module.creator.displayableName }}</small>
                                {% endif %}#}
                                <small>TODO !: Module creator name</small>
                            </h2>
                        {% endif %}
                    {% endblock mhMediaBody %}
                </div>
            </div>
            {% block mhBtnFloat %}
                {% if module.expenseModule is null and module.pollModule is null %}
                    <a href="#addSubModule">
                        <button class="btn palette-Light-Green bg btn-float waves-effect waves-circle waves-float"><i class="zmdi zmdi-plus"></i></button>
                    </a>
                {% endif %}
            {% endblock mhBtnFloat %}
        {% endblock moduleHeader %}
    </div>

    <div class="card-body">
        <div class="panel-group" role="tablist" aria-multiselectable="true">
            <div class="panel panel-collapse {% block moduleInformationClass %}{% endblock %}" {% block moduleInformationAttributs %}{% endblock %}>
                {% block moduleInformation %}
                    <div class="panel-heading m-l-10 m-r-10" id="mInfo-PH-{{ module.token }}" role="tab">
                        <h4 class="panel-title">
                            <a role="button" data-toggle="collapse" href="#collapse-mInfo-PH-{{ module.token }}" aria-expanded="false" aria-controls="collapse-mInfo-PH-{{ module.token }}">Informations
                                générales</a>
                        </h4>
                    </div>
                    <div id="collapse-mInfo-PH-{{ module.token }}" class="collapse" role="tabpanel" aria-labelledby="mInfo-PH-{{ module.token }}">
                        <div class="panel-body">
                            <ul class="tab-nav tn-icon" role="tablist">
                                <li role="presentation" class="active">
                                    <a href="#tab-infoG_{{ module.token }}" aria-controls="#tab-infoG_{{ module.token }}" role="tab" data-toggle="tab"> <i class="zmdi zmdi-home icon-tab"></i> </a>
                                </li>
                                <li role="presentation">
                                    <a href="#tab-modQui_{{ module.token }}" aria-controls="#tab-modQui_{{ module.token }}" role="tab" data-toggle="tab"> <i class="zmdi zmdi-accounts-list-alt
                                    icon-tab"></i> </a>
                                </li>
                                {% if moduleForm is not null and is_granted(constant('AppBundle\\Security\\ModuleVoter::EDIT'), [module, userModuleInvitation]) %}
                                    <li role="presentation">
                                        <a href="#tab-admin_{{ module.token }}" aria-controls="#tab-admin_{{ module.token }}" role="tab" data-toggle="tab"> <i class="zmdi zmdi-settings icon-tab"></i>
                                        </a>
                                    </li>
                                {% endif %}
                            </ul>
                            <div class="tab-content p-20 b-b-w">
                                <div role="tabpanel" class="tab-pane animated fadeIn in active" id="tab-infoG_{{ module.token }}">
                                    {% if moduleForm is not null and is_granted(constant('AppBundle\\Security\\ModuleVoter::EDIT'), [module, userModuleInvitation]) %}
                                        <div class="form-group">
                                            {{ form_label(moduleForm.description, 'module.form.description.label', {'label_attr':{'class':'sr-only'}}) }}
                                            <div class="fg-line">
                                                {{ form_widget(moduleForm.description, {'attr':{'rows':3,'placeholder':'module.form.description.placeholder'}}) }}
                                                {{ form_errors(moduleForm.description) }}
                                            </div>
                                        </div>
                                    {% else %}
                                        <dl>
                                            <dt>Description</dt>
                                            <dd>{{ module.description|nl2br|raw }}</dd>
                                        </dl>
                                        {% if module.paymentModule is not null %}
                                            {#{{ include("@App/Event/module/displayPaymentModule.html.twig", {"module":module}) }}#}
                                        {% endif %}
                                    {% endif %}
                                </div>
                                <div role="tabpanel" class="tab-pane animated fadeIn" id="tab-modQui_{{ module.token }}">
                                    <h2>Liste des invités</h2>
                                </div>

                                {% if moduleForm is not null and is_granted(constant('AppBundle\\Security\\ModuleVoter::EDIT'), [module, userModuleInvitation]) %}
                                    <div role="tabpanel" class="tab-pane animated fadeIn" id="tab-admin_{{ module.token }}">
                                        <div class="form-group">
                                            {{ form_label(moduleForm.responseDeadline, 'module.form.responseDeadline.label') }}
                                            <div class="form-inline fg-line">
                                                {{ form_widget(moduleForm.responseDeadline, {'attr':{'class':'', 'placeholder':'module.form.responseDeadline.placeholder'}}) }}
                                            </div>
                                            {{ form_errors(moduleForm.responseDeadline) }}
                                        </div>
                                        <div class="row">
                                            <div class="col-sm-6">
                                                {{ form_row(moduleForm.invitationOnly, {'label':'module.form.invitationOnly.label', 'label_attr':{'class' : 'radio radio-inline'}}) }}
                                            </div>
                                            <div class="col-sm-6">
                                                {{ form_row(moduleForm.guestsCanInvite, {'label':'module.form.guestsCanInvite.label', 'label_attr':{'class' : 'radio radio-inline'}}) }}
                                            </div>
                                        </div>
                                        <dl class="dl-horizontal">
                                            <dt>Status</dt>
                                            <dd>{{ module.status|trans }}</dd>
                                        </dl>
                                    </div>
                                {% endif %}
                            </div>
                            <div class="pull-right m-b-20 m-r-20">
                                {% if is_granted(constant('AppBundle\\Security\\ModuleVoter::DELETE'), [module, userModuleInvitation]) %}
                                    <a href="{{ path('removeEventModule', {'token':module.token}) }}" id="removeModule{{ module.token }}" data-target="{{ module.token }}"
                                       class="text-danger">{{ "global.button.delete"|trans }}</a>
                                {% endif %}
                                {% if moduleForm is not null and is_granted(constant('AppBundle\\Security\\ModuleVoter::EDIT'), [module, userModuleInvitation]) %}
                                    <button type="submit" class="btn btn-primary waves-effect">{{ "global.button.save"|trans }}</button>
                                {% endif %}
                            </div>
                        </div>
                    </div>
                {% endblock moduleInformation %}
            </div>

        </div>
    </div>
    {% if moduleForm is not null %}
        {{ form_end(moduleForm) }}
    {% endif %}

    <div class="card-body {% block moduleBodyClass %}{% endblock %}" {% block moduleBodyAttributs %}{% endblock %}>
        {% block moduleBody %}{% endblock moduleBody %}
    </div>
    <div class="card-footer">
        {% block moduleFooter %}{% endblock moduleFooter %}
    </div>

    <div id="modal-container-block-{{ module.token }}">
        {% block modalContainer %}{% endblock %}
    </div>

    {% block JSmodule %}
        <script>
            {% if is_granted(constant('AppBundle\\Security\\ModuleVoter::DELETE'), [module, userModuleInvitation]) %}
            $('#removeModule{{ module.token }}').on('click', function (e) {
                e.preventDefault();
                var removeModuleLink = $(this);
                swal({
                    title: '{{ "module.alert.confirm_deletion.title"|trans }}',
                    text: '{{ "module.alert.confirm_deletion.message"|trans }}',
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#DD6B55",
                    confirmButtonText: '{{ "global.button.delete"|trans }}',
                    closeOnConfirm: true,
                    showLoaderOnConfirm: true
                }, function (isConfirm) {
                    if (isConfirm) {
                        ajaxRequest(removeModuleLink, null, e, function (responseJSON, textStatus, jqXHR) {
                            if (responseJSON.actionResult === true) {
                                $('#module-{{ module.token }}').remove();
                            }
                        }, null, null);
                    }
                });
            });
            {% endif %}

            {% if moduleForm is not null and is_granted(constant('AppBundle\\Security\\ModuleVoter::EDIT'), [module, userModuleInvitation]) %}
            $('form#moduleForm-{{ module.token }}').on("submit", function (e) {
                ajaxFormSubmission(this, e, function (responseJSON, textStatus, jqXHR) {
                    if (responseJSON.htmlContent) {
                        $('#module-{{ module.token }}').replaceWith(responseJSON.htmlContent);
                    }
                }, null, null);
            });
            {% endif %}
        </script>
    {% endblock %}
</div>