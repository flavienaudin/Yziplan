<div class="card {% block moduleCardClass %}{% endblock %}" id="module-{{ module.token }}">
    {% if moduleForm is not null %}
        {{ form_start(moduleForm, {'action':path('displayEvent',{'token':module.event.token,'tokenEdition':module.event.tokenEdition}), 'attr':{'id':"moduleForm-"~module.token} }) }}
    {% endif %}
    <div class="card-header {% block moduleHeaderClass %}{% endblock %}" {% block moduleHeaderAttributs %}{% endblock %}>
        {% block moduleHeader %}
            <div class="media">
                <div class="pull-left">
                    {% block mhMediaLeft %}{% endblock mhMediaLeft %}
                </div>
                <div class="pull-right">
                    {% block mhMediaRight %}
                        <a href="#">{{ "global.link.top"|trans }}</a>
                    {% endblock mhMediaRight %}
                </div>
                <div class="media-body">
                    {% block mhMediaBody %}
                        {% if moduleForm is not null %}
                            <div class="form-group">
                                {{ form_label(moduleForm.name, 'module.form.name.label', {'label_attr':{'class':'sr-only'}}) }}
                                <div class="fg-line">
                                    {{ form_widget(moduleForm.name, {'attr':{'placeholder':'module.form.name.placeholder'}}) }}
                                    {{ form_errors(moduleForm.name) }}
                                </div>
                            </div>
                        {% else %}
                            <h2>{{ module.name is not empty?module.name }}</h2>
                        {% endif %}
                    {% endblock mhMediaBody %}
                </div>
            </div>
            {% block mhBtnFloat %}
                {% if allowEdit and (module.expenseModule is null and module.pollModule is null) %}
                    <a href="#addSubModule">
                        <button class="btn palette-Light-Green bg btn-float waves-effect waves-circle waves-float"><i class="zmdi zmdi-plus"></i></button>
                    </a>
                {% endif %}
            {% endblock mhBtnFloat %}
        {% endblock moduleHeader %}
    </div>

    <div class="card-body">
        <div class="panel-group" role="tablist" aria-multiselectable="true">
            <div class="panel panel-collapse {% block moduleInformationClass %}{% endblock %}" {% block moduleInformationAttributs %}{% endblock %}>
                {% block moduleInformation %}
                    <div class="panel-heading m-l-10 m-r-10" id="mInfo-PH-{{ module.token }}" role="tab">
                        <h4 class="panel-title">
                            <a role="button" data-toggle="collapse" href="#collapse-mInfo-PH-{{ module.token }}" aria-expanded="false" aria-controls="collapse-mInfo-PH-{{ module.token }}">Informations
                                générales</a>
                        </h4>
                    </div>
                    <div id="collapse-mInfo-PH-{{ module.token }}" class="collapse" role="tabpanel" aria-labelledby="mInfo-PH-{{ module.token }}">
                        <div class="panel-body">
                            <ul class="tab-nav tn-icon" role="tablist">
                                <li role="presentation" class="active">
                                    <a href="#tab-infoG_{{ module.token }}" aria-controls="#tab-infoG_{{ module.token }}" role="tab" data-toggle="tab"> <i class="zmdi zmdi-home icon-tab"></i> </a>
                                </li>
                                <li role="presentation">
                                    <a href="#tab-modQui_{{ module.token }}" aria-controls="#tab-modQui_{{ module.token }}" role="tab" data-toggle="tab"> <i class="zmdi zmdi-accounts-list-alt
                                    icon-tab"></i>
                                    </a>
                                </li>
                                {% if moduleForm is not null %}
                                    <li role="presentation">
                                        <a class="" href="#tab-admin_{{ module.token }}" aria-controls="#tab-admin_{{ module.token }}" role="tab" data-toggle="tab"> <i class="zmdi zmdi-settings icon-tab"></i> </a>
                                    </li>
                                {% endif %}
                            </ul>
                            <div class="tab-content p-20 b-b-w">
                                <div role="tabpanel" class="tab-pane animated fadeIn in active" id="tab-infoG_{{ module.token }}">
                                    {% if moduleForm is not null %}
                                        <div class="form-group">
                                            {{ form_label(moduleForm.description, 'module.form.description.label', {'label_attr':{'class':'sr-only'}}) }}
                                            <div class="fg-line">
                                                {{ form_widget(moduleForm.description, {'attr':{'rows':3,'placeholder':'module.form.description.placeholder'}}) }}
                                                {{ form_errors(moduleForm.description) }}
                                            </div>
                                        </div>
                                    {% else %}
                                        <dl>
                                            <dt>Description</dt>
                                            <dd>{{ module.description|nl2br|raw }}</dd>
                                        </dl>
                                        {% if module.paymentModule is not null %}
                                            {#{{ include("@App/Event/module/displayPaymentModule.html.twig", {"module":module}) }}#}
                                        {% endif %}
                                    {% endif %}
                                </div>
                                <div role="tabpanel" class="tab-pane animated fadeIn" id="tab-modQui_{{ module.token }}">
                                    <h2>Liste des invités</h2>
                                </div>

                                {% if moduleForm is not null %}
                                    <div role="tabpanel" class="tab-pane animated fadeIn" id="tab-admin_{{ module.token }}">
                                        <div class="form-group">
                                            {{ form_label(moduleForm.responseDeadline, 'module.form.responseDeadline.label') }}
                                            <div class="form-inline fg-line">
                                                {{ form_widget(moduleForm.responseDeadline, {'attr':{'class':'', 'placeholder':'module.form.responseDeadline.placeholder'}}) }}
                                            </div>
                                            {{ form_errors(moduleForm.responseDeadline) }}
                                        </div>
                                        <div class="toggle-switch m-b-15">
                                            <label for="ts_{{ module.tokenEdition }}" class="ts-label">Autoriser les discussions</label> <input id="ts_{{ module.tokenEdition }}" type="checkbox"
                                                                                                                                                hidden="hidden"> <label
                                                    for="ts_{{ module.tokenEdition }}" class="ts-helper"></label>
                                        </div>
                                        <dl class="dl-horizontal">
                                            <dt>Status</dt>
                                            <dd>{{ module.status|trans }}</dd>
                                        </dl>
                                    </div>
                                {% endif %}
                            </div>
                            {% if moduleForm is not null %}
                                <div class="pull-right m-b-20 m-r-20">
                                    <a href="{{ path('removeEventModule', {'tokenEdition':module.tokenEdition}) }}" id="removeModule{{ module.tokenEdition }}" data-target="{{ module.token }}"
                                       class="text-danger">{{ "global.button.delete"|trans }}</a>
                                    <button type="submit" class="btn btn-primary waves-effect">{{ "global.button.save"|trans }}</button>
                                </div>
                            {% endif %}
                        </div>
                    </div>
                {% endblock moduleInformation %}
            </div>
            {#</div>
            <div class="card-body {% block moduleBodyClass %}{% endblock %}" {% block moduleBodyAttributs %}{% endblock %}>#}
            {% block moduleBody %}{% endblock moduleBody %}
        </div>
    </div>

    <div class="card-footer">
        {% block moduleFooter %}{% endblock moduleFooter %}
    </div>

    {% if moduleForm is not null %}
        {{ form_end(moduleForm) }}
    {% endif %}

    {% block modalContainer %}{% endblock %}

    {% block JSmodule %}
        {% if moduleForm is not null %}
            <script>
                $('#removeModule{{ module.tokenEdition }}').on('click', function (e) {
                    e.preventDefault();
                    var removeModuleLink = $(this);
                    swal({
                        title: '{{ "module.alert.confirm_deletion.title"|trans }}',
                        text: '{{ "module.alert.confirm_deletion.message"|trans }}',
                        type: "warning",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: '{{ "global.button.delete"|trans }}',
                        closeOnConfirm: true,
                        showLoaderOnConfirm: true
                    }, function (isConfirm) {
                        if (isConfirm) {
                            var preloader = $('.at-global-preloader');
                            $(preloader).show();
                            $.ajax({
                                url: $(removeModuleLink).attr("href"),
                                type: 'post'
                            }).done(function (response, textStatus, xhr) {
                                if (response.actionResult === true) {
                                    $('#module-{{ module.token }}').remove();
                                }
                            }).fail(function (jqXHR, textStatus, errorThrown) {
                                // nothing
                            }).always(function (responseDataOrJSON) {
                                if (responseDataOrJSON.responseJSON) {
                                    responseDataOrJSON = responseDataOrJSON.responseJSON;
                                }
                                if (responseDataOrJSON.messages) {
                                    var messages = responseDataOrJSON.messages;
                                    for (var messageType in messages) {
                                        if (messages.hasOwnProperty(messageType)) {
                                            messages[messageType].forEach(function (mess) {
                                                toastr[messageType](mess);
                                            });
                                        }
                                    }
                                }
                                $(preloader).hide();
                            });
                        }
                    });
                });

                $('form#moduleForm-{{ module.token }}').on("submit", function (e) {
                    e.preventDefault();
                    var preloader = $('.at-global-preloader');
                    $(preloader).show();
                    var $form = $(this);
                    $('.has-error').each(function () {
                        $(this).find("small.help-block").remove();
                        $(this).removeClass("has-error");
                    });
                    $.ajax({
                        url: $form.attr('action'),
                        type: $form.attr('method'),
                        data: $form.serialize()
                    }).done(function (responseData, textStatus, jqXHR) {
                        if (responseData.htmlContent) {
                            $('#module-{{ module.token }}').replaceWith(responseData.htmlContent);
                        }
                        autosize($('textarea'));
                        $('.clockpicker').clockpicker();
                        $('.datepicker').datetimepicker({
                            format: "DD/MM/YYYY",
                            locale: "fr",
                            showClear: true,
                            icons: {
                                time: 'zmdi zmdi-time',
                                date: 'zmdi zmdi-calendar',
                                up: 'zmdi zmdi-chevron-up',
                                down: 'zmdi zmdi-chevron-down',
                                previous: 'zmdi zmdi-chevron-left',
                                next: 'zmdi zmdi-chevron-right',
                                today: 'zmdi zmdi-gps-dot',
                                clear: 'zmdi zmdi-delete zmdi-hc-lg',
                                close: 'zmdi zmdi-close-circle-o zmdi-hc-lg'
                            },
                            widgetPositioning: {
                                horizontal: 'auto',
                                vertical: 'auto'
                            }
                        });
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        var responseJSON = jqXHR.responseJSON;
                        if (responseJSON != undefined && responseJSON.formErrors) {
                            var formErrors = responseJSON.formErrors;
                            for (var fieldErrorName in formErrors) {
                                if (formErrors.hasOwnProperty(fieldErrorName)) {
                                    var inputField = $('input[name*=' + fieldErrorName + ']');
                                    inputField.parent().addClass("has-error");
                                    inputField.after('<small class="help-block">' + responseJSON.formErrors[fieldErrorName] + '</small>')
                                }
                            }
                        }
                    }).always(function (responseDataOrJSON) {
                        if (responseDataOrJSON.responseJSON) {
                            // In case of fail()
                            responseDataOrJSON = responseDataOrJSON.responseJSON;
                        }
                        if (responseDataOrJSON.messages) {
                            var messages = responseDataOrJSON.messages;
                            for (var messageType in messages) {
                                if (messages.hasOwnProperty(messageType)) {
                                    messages[messageType].forEach(function (mess) {
                                        toastr[messageType](mess);
                                    });
                                }
                            }
                        }
                        $(preloader).hide();
                    });
                });
            </script>
        {% endif %}
    {% endblock %}
</div>