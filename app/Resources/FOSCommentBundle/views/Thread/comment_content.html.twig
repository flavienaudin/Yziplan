{#

 This file is part of the FOSCommentBundle package.

 (c) FriendsOfSymfony <http://friendsofsymfony.github.com/>

 This source file is subject to the MIT license that is bundled
 with this source code in the file LICENSE.

Données d'entrée :
 - children (Tree[]) les enfants du commentaire courant en tant que Tree (={comment, children})
 - comment (Comment) Le commentaire courant
 - depth (int) Profondeur en cours d'affichage
 - view (string) Mode d'affichage
 - userEventInvitation (EventInvitation|null) L'invitation en cours
#}

{% set userEventInvitation = userEventInvitation is defined?userEventInvitation:null %}

{% block fos_comment_comment %}
    <div id="fos_comment_{{ comment.id }}" class="fos_comment_comment_show fos_comment_comment_depth_{{ depth }} media
        {{ userEventInvitation is not null and (userEventInvitation.lastVisitAt is null or userEventInvitation.lastVisitAt < commentinfo.comment.createdAt) ? " notif_new_comment" }}"
         {% if parent is defined and parent is not null %}data-parent="{{ parent.id }}"{% endif %}>
        {% if comment.author is defined %}
            {% set isConnected = (comment.author is not null and userEventInvitation is not null and comment.author == userEventInvitation) %}
            <div class="{{ isConnected?'pull-right':'pull-left' }}">
                <div class="userInvitation-avatar">
                    <div class="avatar-img-container-sm">
                        {{ include("@App/Avatar/partials/avatar_display.html.twig",{"invitation" : comment.author, "userEventInvitation": userEventInvitation}) }}
                    </div>
                </div>
            </div>
        {% endif %}

        {% if fos_comment_can_edit_comment(comment) or fos_comment_can_delete_comment(comment) %}
            <div class="pull-right p-0">
                <ul class="actions">
                    <li class="dropdown">
                        <a href="" data-toggle="dropdown" aria-expanded="false"><i class="zmdi zmdi-more-vert"></i></a>
                        <ul class="dropdown-menu dropdown-menu-right">
                            {% if fos_comment_can_edit_comment(comment) %}
                                <li><a data-container="#fos_comment_comment_body_{{ comment.id }}"
                                       data-url="{{ url("fos_comment_edit_thread_comment", {"id": comment.thread.id, "commentId": comment.id}) }}"
                                       class="fos_comment_comment_edit_show_form">{% trans from 'FOSCommentBundle' %}fos_comment_comment_edit{% endtrans %}</a></li>
                            {% endif %}
                            {% if fos_comment_can_delete_comment(comment) %}
                                <li>
                                    {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                                        {# undelete #}
                                        <a data-url="{{ url("fos_comment_remove_thread_comment", {
                                            "id": comment.thread.id, "commentId": comment.id,
                                            "value": constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_VISIBLE') }) }}" class="fos_comment_comment_remove">
                                            {% trans from 'FOSCommentBundle' %}fos_comment_comment_undelete{% endtrans %}</a>
                                    {% else %}
                                        {# delete #}
                                        <a data-url="{{ url("fos_comment_remove_thread_comment", {
                                            "id": comment.thread.id, "commentId": comment.id,
                                            "value":  constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')}) }}" class="fos_comment_comment_remove">
                                            {% trans from 'FOSCommentBundle' %}fos_comment_comment_delete{% endtrans %}</a>
                                    {% endif %}
                                </li>
                            {% endif %}
                        </ul>
                    </li>
                </ul>
            </div>
        {% endif %}

        <div class="media-body {{ isConnected?'text-right' }}">
            <div class="fos_comment_comment_metas">
                <a class="a-title">{{ comment.authorName }}</a>
                <small class="c-gray m-l-10">{{ comment.createdAt|localizeddate }}</small>

                {# TODO Non utilisé pour l'instant
                {% block fos_comment_comment_metas_voting %}
                    {% if fos_comment_can_vote(comment) %}
                        <div class="fos_comment_comment_voting">
                            <button data-url="{{ url("fos_comment_new_thread_comment_votes", {"id": comment.thread.id, "commentId": comment.id, "value": 1}) }}"
                                    class="fos_comment_comment_vote">{% trans from 'FOSCommentBundle' %}fos_comment_comment_show_voteup{% endtrans %}</button>
                            <button data-url="{{ url("fos_comment_new_thread_comment_votes", {"id": comment.thread.id, "commentId": comment.id, "value": -1}) }}"
                                    class="fos_comment_comment_vote">{% trans from 'FOSCommentBundle' %}fos_comment_comment_show_votedown{% endtrans %}</button>
                            <div class="fos_comment_comment_score"
                                 id="fos_comment_score_{{ comment.id }}">{% include "FOSCommentBundle:Thread:comment_votes.html.twig" with { 'commentScore': comment.score } %}</div>
                        </div>
                    {% endif %}
                {% endblock fos_comment_comment_metas_voting %}#}
            </div>
            <div id="fos_comment_comment_body_{{ comment.id }}" class="fos_comment_comment_body">
                {% block fos_comment_comment_body %}
                    {% if comment is fos_comment_in_state(constant('FOS\\CommentBundle\\Model\\CommentInterface::STATE_DELETED')) %}
                        {% trans from 'FOSCommentBundle' %}fos_comment_comment_deleted{% endtrans %}
                    {% else %}
                        {% if comment is fos_comment_raw %}
                            {{ comment.rawBody | raw }}
                        {% else %}
                            {{ comment.body | nl2br }}
                        {% endif %}
                    {% endif %}
                {% endblock fos_comment_comment_body %}
            </div>

            {% block fos_comment_comment_children %}
                {% if view is not same as('flat') %}
                    {% if fos_comment_can_comment(comment) %}
                        <div class="fos_comment_comment_reply">
                            {% block fos_comment_comment_reply %}
                                <button data-url="{{ url('fos_comment_new_thread_comments', {"id": comment.thread.id}) }}" data-name="{{ comment.authorName }}" data-parent-id="{{ comment.id }}"
                                        class="btn btn-primary fos_comment_comment_reply_show_form">{% trans from 'FOSCommentBundle' %}fos_comment_comment_show_reply{% endtrans %}</button>
                            {% endblock fos_comment_comment_reply %}
                        </div>
                    {% endif %}

                    <div class="fos_comment_comment_replies">
                        {% if children is defined %}
                            {% include "FOSCommentBundle:Thread:comments.html.twig" with { "comments": children, "depth": depth + 1, "parent": comment, "view": view } %}
                        {% endif %}

                    </div>
                {% elseif view is same as('flat') and children is defined and children|length>0 %}
                    {% include "FOSCommentBundle:Thread:comments.html.twig" with { "comments": children, "depth": depth + 1, "parent": comment, "view": view } %}
                {% endif %}
            {% endblock fos_comment_comment_children %}
        </div>
    </div>
{% endblock fos_comment_comment %}
